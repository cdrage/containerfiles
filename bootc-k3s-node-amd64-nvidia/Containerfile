# NOTES
# akmods --force makes it work?
# DISABLE SECURE BOOT PLEASEEEEEEEEEEE!
# 
# built with podman build --platform linux/amd64 -t git.k8s.land/cdrage/nvidia4 --security-opt label=disable --cap-add SYS_ADMIN --build-arg-file build-args.conf .
#FROM git.k8s.land/cdrage/nvidia-test-base1
FROM git.k8s.land/cdrage/nvidia-test-base3

#! ARGUMENTS
#! Intentionally left blank so users know to pass them in... the build will fail if they don't.
ARG HOSTNAME
ARG K3S_URL
ARG K3S_TOKEN
ARG SSH_PUBLIC_KEY
ARG K8S_VERSION=1.30.1

#! Copy over all usr files
COPY usr/ /usr/

#! Set hostname
#! Hostname does NOT work due to: https://gitlab.com/fedora/bootc/tracker/-/issues/25
#! Instead there is a oneshot systemd service that sets the hostname on boot
RUN echo "HOSTNAME=${HOSTNAME}" > /etc/systemd/system/hostname.service.env

#! UNCOMMENT if you want to add auth.json for pulling images from a private registry for bootc
# COPY auth.json /etc/ostree/auth.json

#! Install AMD64 k3s
RUN curl -Lo /usr/local/bin/k3s https://github.com/k3s-io/k3s/releases/download/v${K8S_VERSION}%2Bk3s1/k3s; chmod a+x /usr/local/bin/k3s
RUN echo "K3S_TOKEN=${K3S_TOKEN}" > /etc/systemd/system/k3s.service.env
RUN echo "K3S_URL=${K3S_URL}" >> /etc/systemd/system/k3s.service.env

#! Install AMD64 kubectl for internal testing
RUN curl -Lo /usr/local/bin/kubectl https://dl.k8s.io/release/v${K8S_VERSION}/bin/linux/amd64/kubectl; chmod a+x /usr/local/bin/kubectl

#! Add the SSH key from SSH_PUBLIC_KEY so we can actually get the kubeconfig file
RUN set -eu; mkdir -p /usr/ssh && \
  echo 'AuthorizedKeysFile /usr/ssh/%u.keys .ssh/authorized_keys .ssh/authorized_keys2' >> /etc/ssh/sshd_config.d/30-auth-system.conf && \
  echo ${SSH_PUBLIC_KEY} > /usr/ssh/root.keys && chmod 0600 /usr/ssh/root.keys

#! Enable all the services we will be using
RUN systemctl enable nvidia-toolkit-firstboot.service
RUN systemctl enable hostname.service
RUN systemctl enable nvidia-drivers.service
RUN systemctl enable k3s.service